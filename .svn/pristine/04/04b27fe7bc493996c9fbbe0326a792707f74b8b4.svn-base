package tool;

import java.awt.Image;
import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;

import view.DrawingPanel;

/**
 *
 * 
 * @author embabazi
 * @version 1
 */
public abstract class AbstractTool extends AbstractAction
{

    /** The JPanel associated with the Action. */
    private final DrawingPanel my_panel;

    /** The Mnemonic Key. */
    private final Integer my_mnemonic;

    /**
     * Constructs an AbstractTool.
     * 
     * @param the_name the name for the tool.
     * @param the_drawing_area the drawing area associated with the tool.
     * @param the_mnemonic_key the key for setting mnemonic.
     */
    protected AbstractTool(final String the_name, final DrawingPanel the_drawing_area,
            final Integer the_mnemonic_key, final ImageIcon theIcon)
    {
        super(the_name);
        my_panel = the_drawing_area;
        my_mnemonic = the_mnemonic_key;
        setUpAction(the_name,theIcon);
//        final ImageIcon icon = (ImageIcon) theIcon;
//        final Image largeImage =
//                icon.getImage().getScaledInstance(15, -1, java.awt.Image.SCALE_SMOOTH);
//        final ImageIcon largeIcon = new ImageIcon(largeImage);
//        putValue(Action.LARGE_ICON_KEY, largeIcon);

    }

    /**
     * Sets up the action for constructor.
     * 
     * @param the_name the name of the action.
     * @param theIcon The Icon to appear on the button.
     */
    private void setUpAction(final String the_name , final ImageIcon theIcon)
    {
        putValue(Action.MNEMONIC_KEY, my_mnemonic);
        putValue(Action.SELECTED_KEY, true);
        putValue(Action.NAME, the_name);
    
        final ImageIcon icon = (ImageIcon) theIcon;
        final Image largeImage =
                icon.getImage().getScaledInstance(15, -1, java.awt.Image.SCALE_SMOOTH);
        final ImageIcon largeIcon = new ImageIcon(largeImage);
        putValue(Action.LARGE_ICON_KEY, largeIcon);

    }
    //  private void setUpAction(final Icon theIcon) {
    //      putValue(Action.LARGE_ICON_KEY, largeIcon);
    //  }

    /** {@inheritDoc} */
    @Override
    public void actionPerformed(final ActionEvent the_event)
    {
        my_panel.setSelected((String) getValue(Action.NAME.toString()));
    }
}